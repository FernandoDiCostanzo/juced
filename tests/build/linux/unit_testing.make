# C++ Console Executable Makefile autogenerated by premake
# Don't edit this file! Instead edit `premake.lua` then rerun `make`

ifndef CONFIG
  CONFIG=Debug
endif

# if multiple archs are defined turn off automated dependency generation
DEPFLAGS := $(if $(word 2, $(TARGET_ARCH)), , -MMD)

ifeq ($(CONFIG),Debug)
  BINDIR := ../../../bin
  LIBDIR := ../../../bin
  OBJDIR := ../../../bin/intermediate/unit_testingDebug
  OUTDIR := ../../../bin
  CPPFLAGS := $(DEPFLAGS) -D "LINUX=1" -D "JUCE_USE_XSHM=1" -D "JUCE_OPENGL=1" -D "JUCE_ALSA=1" -D "JUCE_JACK=1" -D "JUCE_USE_VSTSDK_2_4=0" -D "DEBUG=1" -D "_DEBUG=1" -I "/usr/include" -I "/usr/include/freetype2" -I "../../../../juce" -I "../../../../juce/src" -I "../../../../juce/extras/audio plugins" -I "../../src" -I "../../../../vst/vstsdk2.3" -I "../../../../vst/vstsdk2.3/source/common" -I "../../../../vstsdk2.3" -I "../../../../vstsdk2.3/source/common" -I "../../vst/vstsdk2.3" -I "../../vst/vstsdk2.3/source/common" -I "../../vstsdk2.3" -I "../../vstsdk2.3/source/common" -I "/usr/include/vstsdk2.3/source/common" -I "/usr/include/vst/source/common"
  CFLAGS += $(CPPFLAGS) $(TARGET_ARCH) -g -O0 -g -Wall
  CXXFLAGS += $(CFLAGS)
  LDFLAGS += -L$(BINDIR) -L$(LIBDIR) -L"../../../bin" -L"/usr/X11R6/lib/" -L"/usr/lib/" -lfreetype -lpthread -lrt -lX11 -lXext -lGL -lGLU -lasound -ljack -ljuce_debug
  LDDEPS :=
  RESFLAGS := -D "LINUX=1" -D "JUCE_USE_XSHM=1" -D "JUCE_OPENGL=1" -D "JUCE_ALSA=1" -D "JUCE_JACK=1" -D "JUCE_USE_VSTSDK_2_4=0" -D "DEBUG=1" -D "_DEBUG=1" -I "/usr/include" -I "/usr/include/freetype2" -I "../../../../juce" -I "../../../../juce/src" -I "../../../../juce/extras/audio plugins" -I "../../src" -I "../../../../vst/vstsdk2.3" -I "../../../../vst/vstsdk2.3/source/common" -I "../../../../vstsdk2.3" -I "../../../../vstsdk2.3/source/common" -I "../../vst/vstsdk2.3" -I "../../vst/vstsdk2.3/source/common" -I "../../vstsdk2.3" -I "../../vstsdk2.3/source/common" -I "/usr/include/vstsdk2.3/source/common" -I "/usr/include/vst/source/common"
  TARGET := unit_testing_debug
 BLDCMD = $(CXX) -o $(OUTDIR)/$(TARGET) $(OBJECTS) $(LDFLAGS) $(RESOURCES) $(TARGET_ARCH)
endif

ifeq ($(CONFIG),Release)
  BINDIR := ../../../bin
  LIBDIR := ../../../bin
  OBJDIR := ../../../bin/intermediate/unit_testingRelease
  OUTDIR := ../../../bin
  CPPFLAGS := $(DEPFLAGS) -D "LINUX=1" -D "JUCE_USE_XSHM=1" -D "JUCE_OPENGL=1" -D "JUCE_ALSA=1" -D "JUCE_JACK=1" -D "JUCE_USE_VSTSDK_2_4=0" -D "NDEBUG=1" -I "/usr/include" -I "/usr/include/freetype2" -I "../../../../juce" -I "../../../../juce/src" -I "../../../../juce/extras/audio plugins" -I "../../src" -I "../../../../vst/vstsdk2.3" -I "../../../../vst/vstsdk2.3/source/common" -I "../../../../vstsdk2.3" -I "../../../../vstsdk2.3/source/common" -I "../../vst/vstsdk2.3" -I "../../vst/vstsdk2.3/source/common" -I "../../vstsdk2.3" -I "../../vstsdk2.3/source/common" -I "/usr/include/vstsdk2.3/source/common" -I "/usr/include/vst/source/common"
  CFLAGS += $(CPPFLAGS) $(TARGET_ARCH) -O2 -O0 -pipe -fvisibility=hidden -Wall
  CXXFLAGS += $(CFLAGS)
  LDFLAGS += -L$(BINDIR) -L$(LIBDIR) -s -L"../../../bin" -L"/usr/X11R6/lib/" -L"/usr/lib/" -lfreetype -lpthread -lrt -lX11 -lXext -lGL -lGLU -lasound -ljack -ljuce
  LDDEPS :=
  RESFLAGS := -D "LINUX=1" -D "JUCE_USE_XSHM=1" -D "JUCE_OPENGL=1" -D "JUCE_ALSA=1" -D "JUCE_JACK=1" -D "JUCE_USE_VSTSDK_2_4=0" -D "NDEBUG=1" -I "/usr/include" -I "/usr/include/freetype2" -I "../../../../juce" -I "../../../../juce/src" -I "../../../../juce/extras/audio plugins" -I "../../src" -I "../../../../vst/vstsdk2.3" -I "../../../../vst/vstsdk2.3/source/common" -I "../../../../vstsdk2.3" -I "../../../../vstsdk2.3/source/common" -I "../../vst/vstsdk2.3" -I "../../vst/vstsdk2.3/source/common" -I "../../vstsdk2.3" -I "../../vstsdk2.3/source/common" -I "/usr/include/vstsdk2.3/source/common" -I "/usr/include/vst/source/common"
  TARGET := unit_testing
 BLDCMD = $(CXX) -o $(OUTDIR)/$(TARGET) $(OBJECTS) $(LDFLAGS) $(RESOURCES) $(TARGET_ARCH)
endif

OBJECTS := \
	$(OBJDIR)/mytest.o \

MKDIR_TYPE := msdos
CMD := $(subst \,\\,$(ComSpec)$(COMSPEC))
ifeq (,$(CMD))
  MKDIR_TYPE := posix
endif
ifeq (/bin,$(findstring /bin,$(SHELL)))
  MKDIR_TYPE := posix
endif
ifeq ($(MKDIR_TYPE),posix)
  CMD_MKBINDIR := mkdir -p $(BINDIR)
  CMD_MKLIBDIR := mkdir -p $(LIBDIR)
  CMD_MKOUTDIR := mkdir -p $(OUTDIR)
  CMD_MKOBJDIR := mkdir -p $(OBJDIR)
else
  CMD_MKBINDIR := $(CMD) /c if not exist $(subst /,\\,$(BINDIR)) mkdir $(subst /,\\,$(BINDIR))
  CMD_MKLIBDIR := $(CMD) /c if not exist $(subst /,\\,$(LIBDIR)) mkdir $(subst /,\\,$(LIBDIR))
  CMD_MKOUTDIR := $(CMD) /c if not exist $(subst /,\\,$(OUTDIR)) mkdir $(subst /,\\,$(OUTDIR))
  CMD_MKOBJDIR := $(CMD) /c if not exist $(subst /,\\,$(OBJDIR)) mkdir $(subst /,\\,$(OBJDIR))
endif

.PHONY: clean

$(OUTDIR)/$(TARGET): $(OBJECTS) $(LDDEPS) $(RESOURCES)
	@echo Linking unit_testing
	-@$(CMD_MKBINDIR)
	-@$(CMD_MKLIBDIR)
	-@$(CMD_MKOUTDIR)
	@$(BLDCMD)

clean:
	@echo Cleaning unit_testing
ifeq ($(MKDIR_TYPE),posix)
	-@rm -f $(OUTDIR)/$(TARGET)
	-@rm -rf $(OBJDIR)
else
	-@if exist $(subst /,\,$(OUTDIR)/$(TARGET)) del /q $(subst /,\,$(OUTDIR)/$(TARGET))
	-@if exist $(subst /,\,$(OBJDIR)) del /q $(subst /,\,$(OBJDIR))
	-@if exist $(subst /,\,$(OBJDIR)) rmdir /s /q $(subst /,\,$(OBJDIR))
endif

$(OBJDIR)/mytest.o: ../../src/mytest.cpp
	-@$(CMD_MKOBJDIR)
	@echo $(notdir $<)
	@$(CXX) $(CXXFLAGS) -o "$@" -c "$<"

-include $(OBJECTS:%.o=%.d)

